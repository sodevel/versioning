/**
 * Plug-in development
 */

plugins {
    /**
     * Build performance
     */
    //id 'com.gradle.build-scan' version '1.16'
    /**
     * Plugin
     */
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.15.0'
    id 'maven-publish'
    /**
     * Versioning applied to itself
     */
    id 'net.nemerosa.versioning' version '2.14.0'
    /**
     * Written in Groovy
     */
    id 'groovy'
}

//buildScan {
//    termsOfServiceUrl   = 'https://gradle.com/terms-of-service'
//    termsOfServiceAgree = 'yes'
//}

/**
 * Meta information
 */

group = 'net.nemerosa'
version = '2.14.1-SNAPSHOT'

/**
 * Dependencies
 */

ext {
    jgitVersion = '5.6.0.201912101111-r'
}

repositories {
   jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.ajoberstar.grgit:grgit-core:4.0.1'
    compile "org.eclipse.jgit:org.eclipse.jgit.ui:${jgitVersion}"
    compile "org.eclipse.jgit:org.eclipse.jgit:${jgitVersion}"
    compile 'org.tmatesoft.svnkit:svnkit:1.8.12'
    testCompile "junit:junit:4.12"
    testCompile "commons-lang:commons-lang:2.6"
    testCompile "commons-io:commons-io:2.5"
}

/**
 * Plug-in definition
 */
pluginBundle {
    website = 'https://github.com/nemerosa/versioning/'
    vcsUrl = 'https://github.com/nemerosa/versioning/'
    description = 'Gradle plug-in that computes version information from the SCM'
    tags = ['gradle', 'plugin', 'scm', 'git', 'svn', 'version']
}

gradlePlugin {
    plugins {
        versioningPlugin {
            id = 'net.nemerosa.versioning'
            displayName = 'Versioning plugin for Gradle'
            description = 'Gradle plug-in that computes version information from the SCM'
            implementationClass = 'net.nemerosa.versioning.VersioningPlugin'
        }
    }
}

publishing {
    repositories {
        maven {
            url = version.endsWith("SNAPSHOT") ? "${enterpriseRepositorySnapshots}" : "${enterpriseRepositoryReleases}"
            credentials {
                username = "${enterpriseRepositoryUser}"
                password = "${enterpriseRepositoryPassword}"
            }
        }
    }
}

test {
  environment "GIT_TEST_BRANCH", "feature/456-cute"
  environment "SVN_TEST_BRANCH", "feature-456-cute"
}
